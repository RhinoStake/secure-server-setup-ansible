---
- name: Create hotfix directory
  ansible.builtin.file:
    path: /tmp/hotfix
    state: directory

- name: Download hotfix binary
  ansible.builtin.get_url:
    url: "{{ hotfix_binary_url }}"
    dest: /tmp/hotfix/aptos_binary.tgz
    mode: "0644"

- name: Unarchive hotfix
  ansible.builtin.command:
    cmd: "tar -zxf aptos_binary.tgz --absolute-names --no-anchored aptos-node --transform='s:.*/::'"
  args:
    chdir: /tmp/hotfix/

- name: Verify hotfix
  ansible.builtin.command:
    cmd: "/tmp/hotfix/aptos-node --version"
  register: nodeoutput

- name: Fail upgrade on error
  ansible.builtin.fail:
    msg: "Binary not present, not executable or other issue"
  when:
    - nodeoutput.stdout.find('Aptos Node') == -1

- name: Copy hotfix
  become: true
  ansible.builtin.copy:
    src: "/tmp/hotfix/aptos-node"
    dest: "/usr/local/bin/aptos-node"
    owner: root
    group: root
    mode: "0755"
    remote_src: true
    force: true
  notify: Restart node

- name: Cleanup hotfix
  ansible.builtin.file:
    path: /tmp/hotfix
    state: absent
