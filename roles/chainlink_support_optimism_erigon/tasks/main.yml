---
# Optimism Erigon structure with host networking
# Ports:
#  - Geth: 8545 (rpc), 8546 (ws), 8551 (authrpc)
#  - Node: 9003 (p2p - public), 9545 (rpc)

- name: Ensure op-erigon-data exists
  ansible.builtin.file:
    path: "{{ user_dir }}/docker-compose/op-erigon-data"
    state: directory
    mode: "0755"

- name: Create jwtsecret if it does not exist
  ansible.builtin.shell: "openssl rand -hex 32 | tr -d '\n' > jwtsecret"
  args:
    chdir: "{{ user_dir }}/docker-compose"
    creates: jwtsecret
    executable: /bin/bash

- name: Check if op-erigon-data is populated
  ansible.builtin.find:
    paths: "{{ user_dir }}/docker-compose/op-erigon-data"
    file_type: any
    hidden: false
  register: op_erigon_data

- name: Download and extract snapshot
  when: op_erigon_data.matched == 0
  block:
    - name: Download snapshot
      ansible.builtin.shell:
        cmd: "aria2c -x10 -d {{ user_dir }} -o op-erigon-snapshot.tar.gz https://op-erigon-backup.mainnet.testinprod.io/"

    - name: Extract snapshot
      ansible.builtin.unarchive:
        src: "{{ user_dir }}/op-erigon-snapshot.tar.gz"
        dest: "{{ user_dir }}/docker-compose/op-erigon-data"
        remote_src: true
        extra_opts:
          - --strip-components 1

- name: Open p2p ports for op-node
  become: true
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  loop:
    - port: 9003
      proto: any
      comment: External - op-node p2p

- name: Run op-erigon container
  community.docker.docker_container:
    name: op-erigon
    image: testinprod/op-erigon:{{ op_erigon_version }}
    restart_policy: unless-stopped
    state: started
    stop_timeout: 600
    network_mode: host
    volumes:
      - "{{ user_dir }}/docker-compose/op-erigon-data:/op-erigon-data"
      - "{{ user_dir }}/docker-compose/jwtsecret:/jwtsecret"
      - /etc/localtime:/etc/localtime:ro
    command:
      ## General
      - --datadir=/op-erigon-data
      - --snapshots=false
      ## Interfaces
      # Consensus Layer Engine API
      - --authrpc.addr=127.0.0.1
      - --authrpc.port=8551
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/jwtsecret
      # HTTP/RPC
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.vhosts=*
      - --http.api=debug,eth,txpool,net,engine
      # P2P
      - --port=30303
      - --nodiscover
      - --maxpeers=0
      # Metrics
      - --metrics
      - --metrics.addr=0.0.0.0
      - --metrics.port=6060
      # Transaction & Chain Specific
      - --rollup.sequencerhttp=https://mainnet-sequencer.optimism.io
      - --rollup.disabletxpoolgossip=true
      - --networkid=10 # Optimism
      - --rpc.gascap=0
      - --rpc.txfeecap=0

- name: Run op-node container
  community.docker.docker_container:
    name: op-node
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:{{ op_node_version }}
    restart_policy: unless-stopped
    state: started
    stop_timeout: 600
    network_mode: host
    volumes:
      - "{{ user_dir }}/docker-compose/jwtsecret:/jwtsecret"
      - /etc/localtime:/etc/localtime:ro
    command:
      ## General
      - op-node
      - --l1={{ ethereum_l1 }}
      - --l2=http://127.0.0.1:8551
      - --l2.jwt-secret=/jwtsecret
      - --network=mainnet
      ## Interfaces
      - --rpc.addr=0.0.0.0
      - --rpc.port=9545
