---
- name: Update peers in config.toml
  when: peers is defined
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: "^{{ item }} ="
    line: '{{ item }} = "{{ peers }}"'
    state: present
    backrefs: true
  loop:
    - persistent_peers
    - persistent-peers

- name: Update seeds in config.toml
  when: seeds is defined
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: "^{{ item }} ="
    line: '{{ item }} = "{{ seeds }}"'
    state: present
    backrefs: true
  loop:
    - seeds
    - bootstrap-peers

- name: Update unconditionals in config.toml
  when: unconditional_nodeids is defined
  ansible.builtin.lineinfile:
    path: "{{ user_dir }}/{{ folder }}/config/config.toml"
    regexp: "^{{ item }} ="
    line: '{{ item }} = "{{ unconditional_nodeids }}"'
    state: present
    backrefs: true
  loop:
    - unconditional_peer_ids
    - unconditional-peer-ids

- name: Copy binary into cosmovisor directory
  ansible.builtin.copy:
    src: "{{ user_dir }}/go/bin/{{ daemon }}"
    dest: "{{ user_dir }}/{{ folder }}/cosmovisor/genesis/bin"
    remote_src: true
    mode: "0755"

# Check to see if upgrade folder variable is defined and create that directory as well
- name: Create upgrade directories in Cosmovisor folder
  when: upgrade_name is defined
  block:
    - name: Create appropriate folder
      ansible.builtin.file:
        path: "{{ user_dir }}/{{ folder }}/cosmovisor/upgrades/{{ upgrade_name }}/bin"
        state: directory
        mode: "0755"

    - name: Copy binary into cosmovisor upgrade directory
      ansible.builtin.copy:
        src: "{{ user_dir }}/go/bin/{{ daemon }}"
        dest: "{{ user_dir }}/{{ folder }}/cosmovisor/upgrades/{{ upgrade_name }}/bin"
        remote_src: true
        mode: "0755"
