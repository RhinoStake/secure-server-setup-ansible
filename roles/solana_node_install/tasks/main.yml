# Build and update Solana RPC node
- name: Install additional build pre-requisites
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    cache_valid_time: 3600
  loop:
    - pkg-config
    - libudev-dev
    - llvm
    - libclang-dev
    - protobuf-compiler
    - libssl-dev
    - clang
    - acl

- name: Add additional system tweaks
  become: true
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
  loop:
    ## From Solana Docs
    # Increase UDP Buffer sizes
    - name: net.core.rmem_default
      value: "134217728"
    - name: net.core.rmem_max
      value: "134217728"
    - name: net.core.wmem_default
      value: "134217728"
    - name: net.core.wmem_max
      value: "134217728"
    # Set the maximum amount of option memory buffers to 0
    - name: net.core.optmem_max
      value: "0"
    # Increase memory mapped files limit
    - name: vm.max_map_count
      value: "1000000"
    - name: fs.nr_open
      value: "1000000"
    ## Additional tweaks
    - name: kernel.nmi_watchdog
      value: "0"
    - name: vm.swappiness
      value: "30"
    - name: vm.stat_interval
      value: "10"
    - name: vm.dirty_ratio
      value: "40"
    - name: vm.dirty_background_ratio
      value: "10"
    - name: vm.dirty_expire_centisecs
      value: "36000"
    - name: vm.dirty_writeback_centisecs
      value: "3000"
    - name: vm.dirtytime_expire_seconds
      value: "43200"
    - name: kernel.timer_migration
      value: "0"
    - name: kernel.pid_max
      value: "{{ ansible_processor_vcpus * 1024 | int | abs }}" # 1024 * threads
    # - name: net.ipv4.tcp_fastopen
    #   value: "3"

- name: Create network folder
  ansible.builtin.file:
    path: "{{ user_dir }}/{{ folder }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Verify if node is initialized
  ansible.builtin.stat:
    path: "{{ user_dir }}/{{ folder }}/validator-keypair.json"
  register: node_initialized

- name: Update solana repo for node install
  ansible.builtin.git:
    repo: "{{ repo }}"
    dest: "{{ user_dir }}/source/{{ network }}"
    version: "{{ node_version }}"
    update: true
    force: true
    recursive: true
  register: git_changed

- name: Build new version & install
  notify: Restart solana
  when: git_changed.changed
  block:
    - name: Build solana
      ansible.builtin.command: "nice -n 15 {{ item }}"
      args:
        chdir: "{{ user_dir }}/source/{{ network }}"
      environment:
        PATH: "{{ path }}"
      loop:
        - "cargo clean"
        - "./scripts/cargo-install-all.sh ."

    - name: Archive exiting binaries
      become: true
      ansible.builtin.copy:
        src: "/usr/local/bin/{{ item }}"
        dest: "/usr/local/bin/{{ item }}-pre"
        owner: root
        group: root
        mode: "0755"
        remote_src: true
        force: true
      loop:
        - solana-validator

    - name: Copy new binaries
      become: true
      ansible.builtin.copy:
        src: "{{ user_dir }}/source/{{ network }}/bin/{{ item }}"
        dest: "/usr/local/bin"
        owner: root
        group: root
        mode: "0755"
        remote_src: true
        force: true
      loop:
        - solana-validator

- name: Create keys for node
  when: not node_initialized.stat.exists
  ansible.builtin.shell:
    cmd: "{{ user_dir }}/source/{{ network }}/bin/solana-keygen new --no-bip39-passphrase -o {{ user_dir }}/{{ folder }}/validator-keypair.json"
    creates: "{{ user_dir }}/{{ folder }}/validator-keypair.json"
