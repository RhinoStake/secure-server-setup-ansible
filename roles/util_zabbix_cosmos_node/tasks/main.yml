---
- name: Create host groups
  throttle: 1
  delegate_to: "{{ zabbix_server_host }}"
  run_once: true
  vars:
    ansible_network_os: community.zabbix.zabbix
    ansible_connection: httpapi
    ansible_httpapi_port: 8080
    ansible_httpapi_use_ssl: false
    ansible_user: "{{ zabbix_login_user }}"
    ansible_httpapi_pass: "{{ zabbix_login_pass }}"
    ansible_zabbix_url_path: "/"
  community.zabbix.zabbix_group:
    state: present
    host_groups:
      - Cosmos
      - Cosmos node
      - mainnet
      - testnet
      - Cosmos rpc
      - Cosmos archive
      - Cosmos validator
      - "{{ network }}"

- name: Create node monitoring host
  throttle: 1
  delegate_to: "{{ zabbix_server_host }}"
  vars:
    ansible_network_os: community.zabbix.zabbix
    ansible_connection: httpapi
    ansible_httpapi_port: 8080
    ansible_httpapi_use_ssl: false
    ansible_user: "{{ zabbix_login_user }}"
    ansible_httpapi_pass: "{{ zabbix_login_pass }}"
    ansible_zabbix_url_path: "/"
  community.zabbix.zabbix_host:
    host_name: "NODE-{{ network }}-{{ inventory_hostname }}"
    visible_name: "NODE-{{ network }}-{{ inventory_hostname }}"
    description: "{{ network }} node in {{ node_info.json.org }} ({{ node_info.json.city }}, {{ node_info.json.country }})"
    host_groups:
      - Cosmos
      - Cosmos node
      - "{{ network }}"
      - "{% if 'Testnet' in group_names %}testnet{% else %}mainnet{% endif %}"
      - "{% if rpc is defined %}Cosmos rpc{% elif archive is defined %}Cosmos archive{% else %}Cosmos validator{% endif %}"
    link_templates:
      - "{% if network == 'sei' %}Cosmos Nodes - Sei{% else %}Cosmos Nodes - Base{% endif %}"
    status: enabled
    state: present
    inventory_mode: manual
    inventory_zabbix:
      alias: "{{ inventory_hostname }}"
      software: "{{ ansible_distribution }} {{ ansible_distribution_major_version }}"
      location: "{{ node_info.json.org }}"
      location_lat: "{{ latlong.0 }}"
      location_lon: "{{ latlong.1 }}"
      site_city: "{{ node_info.json.city }}"
      site_state: "{{ node_info.json.region }}"
      site_country: "{{ node_info.json.country }}"
    tags: "{{ inventory_group_dict }}"
    interfaces:
      - type: agent
        main: 1 # Sets default interface
        useip: 1
        ip: "{% if nebula_internal_ip_addr is defined and nebula_internal_ip_addr %}{{ nebula_internal_ip_addr }}{% else %}{{ ansible_host }}{% endif %}"
        dns: ""
        port: "10050"
    macros:
      - macro: "{$SYSTEMD.NAME.SERVICE.MATCHES}"
        value: "{{ daemon }}"
      - macro: "{$NODE_DAEMON}"
        value: "{{ daemon }}"
      - macro: "{$RPC_PORT}"
        value: "{{ custom_port_prefix }}57"

- name: Force restart zabbix agent
  become: true
  ansible.builtin.systemd:
    name: zabbix-agent2
    enabled: true
    state: restarted
